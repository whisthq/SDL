# workflows/build-and-publish-sdl-macos-arm64.yml
#
# Build & Publish Fractal SDL
# Build and publish the internal Fractal version of SDL for macOS ARM64
# by building on a self-hosted MacStadium M1 Mac Mini and uploading compiled libs to AWS S3.

name: "Build & Publish Fractal SDL"

on:
    pull_request:
        branches:
            - main
        paths-ignore:
            - README.md
    push:
        branches:
            - main
        paths-ignore:
            - README.md
    workflow_dispatch:

jobs:
    build-and-publish-fractal-sdl:
        name: "Build and Publish Fractal SDL on macOS (ARM64)"
        runs-on: [self-hosted, macOS, ARM64]
        defaults:
          run:
            shell: "/usr/bin/arch -arch arm64e /bin/bash {0}"

        env:
            binary-location: build
            macos-tar-name: fractal-macos-arm64-sdl2-static-lib.tar.gz
            s3-bucket-region: us-east-1
            s3-bucket-uri: s3://fractal-protocol-shared-libs
            
        steps:
            ################################# CONFIG STEPS START ###############################

            - name: Check M1 Runner Status
              run: |
                clang --version
                uname -a

            - name: Checkout Git Repository
              uses: actions/checkout@v2
            
            - name: Install awscli, cmake, gcc, and pkg-config
              run: brew install awscli cmake pkg-config gcc  

            # For uploading the compiled libs to AWS S3
            - name: Configure AWS S3 CLI
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.s3-bucket-region }}

            ###################################################################################
            ##################################### BUILDING ####################################     

            - name: Build Fractal SDL on macOS ARM64
              env:
                  FRACTAL_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
              run: |
                  # create build output folder
                  mkdir ${{ env.binary-location }}

                  # configure Cmake
                  cmake \
                    -S . \
                    -B build \
                    -D CMAKE_BUILD_TYPE=Release

                  # build SDL
                  cd ${{ env.binary-location }} && make SDL2-static

            ###################################################################################
            ################################# PUBLISH STEPS START #############################

            # Only publish to AWS S3 on Push/Workflow_dispatch events (code merged into `main`), PRs only build to test
            - name: Tar libSDL and Upload to AWS S3 (Only on Push Events)
              if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
              run: |
                  cd ${{ env.binary-location }}

                  tar -zcvf ${{ env.macos-tar-name }} libSDL2.a
                  aws s3 cp ${{ env.macos-tar-name }} ${{ env.s3-bucket-uri }}/${{ env.macos-tar-name }}

            ###################################################################################

            - name: Notify Slack on Workflow Error (Only on Push/Workflow_dispatch Events)
              if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
              run: |
                  curl -X POST \
                  --data-urlencode "payload={\"channel\": \"#alerts-prod\", \"username\": \"Fractal Bot\", \"text\": \"@releases :rotating_light: Failed to Deploy Fractal ARM64 macOS \`SDL\` Static Library to AWS S3, Investigate Immediately :rotating_light: (<https://github.com/fractal/fractal/actions/runs/${{ github.run_id }} | see logs>)\", \"icon_emoji\": \":fractal:\"}" \
                  ${{ secrets.SLACK_HOOKS_ENDPOINT }}

    notify-slack:
        name: Notify Slack
        needs: [build-and-publish-fractal-sdl]
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && success() }}
        runs-on: ubuntu-20.04
        steps:
            - name: Notify Slack
              run: |
                  curl -X POST \
                  --data-urlencode "payload={\"channel\": \"#alerts-prod\", \"username\": \"Fractal Bot\", \"text\": \"Fractal ARM64 macOS \`SDL\` Static Library Deployed to Production via Upload to AWS S3\", \"icon_emoji\": \":fractal:\"}" \
                  ${{ secrets.SLACK_HOOKS_ENDPOINT }}
